#!groovy

int rollbackNum = "${RollbackFrom}" as Integer

stage('Setup') {
  node('AWS') {
    echo "Rolling back from stage ${RollbackFrom}"
  }
}

stage('Mandel Deploy Stage 2') {
  node('AWS') {
    if(rollbackNum >= 7) {
      // Rollback Mandel stage 2
    } else {
      echo 'Skipping this rollback because of given RollbackFrom value'
    }
  }
}

stage('Trace Deploy Stage 2') {
  node('AWS') {
    if(rollbackNum >= 6) {
      // Rollback Trace stage 2
    } else {
      echo 'Skipping this rollback because of given RollbackFrom value'
    }
  }
}

stage('Dynamob Deployment') {
  node('master') {
    if(rollbackNum >= 5) {
      // Rollback Dynamob
    } else {
      echo 'Skipping this rollback because of given RollbackFrom value'
    }
  }
}

stage('Parade 1.0/1.5.1 Deployment') {
  node('AWS') {
    if(rollbackNum >= 4) {
      // parallel
      // -> Rollback parade 1.0
      // -> Rollback parade 1.5.1
    } else {
      echo 'Skipping this rollback because of given RollbackFrom value'
    }
  }
}

stage('Mandel/WaitTimeModel/Map Matching Deployment') {
  node('AWS') {
    if(rollbackNum >= 3) {
      // parallel
      // -> Rollback Mandel Stage 1
      // -> Rollback WaitTimeModel
      // -> Rollback Map Matching Deployment
    } else {
      echo 'Skipping this rollback because of the given RollbackFrom value'
    }
  }
}

stage('Trace/Crystal/Navigator Deployment') {
  node('AWS') {
    if(rollbackNum >= 2) {
      parallel 'Trace Deployment':{
        build job: 'Trace_Rollback_Staged', parameters: [string(name: 'City', value: "${City}"), string(name: 'Deploy_Env', value: "${Deploy_Env}"), string(name: 'Stage', value: "1")]
      }, 'Crystal Deployment':{
        build job: 'Crystal_Rollback', parameters: [string(name: 'City', value: "${City}"), string(name: 'Deploy_Env', value: "${Deploy_Env}")]
      }, 'Navigator Deployment':{
        // Rollback Navigator
      }
    } else {
      echo 'Skipping this rollback because of the given RollbackFrom value'
    }
  }
}

stage('FFS Deployment') {
  node('AWS') {
    if(rollbackNum >= 1) {
      build job: 'FFS_Rollback', parameters: [string(name: 'City', value: "${City}"), string(name: 'Deploy_Env', value: "${Deploy_Env}")]
    } else {
      echo 'Skipping this rollback because of the given RollbackFrom value'
    }
  }
}
