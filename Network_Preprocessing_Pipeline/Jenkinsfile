#!groovy
stage 'Setup'
  echo ("City is: ${City}")
  node {
    sh "export PYTHONPATH=${WORKSPACE}:${PYTHONPATH}"
    sh 'echo ${PYTHONPATH}'
    sh "mkdir -p ${WORKSPACE}/output"
  }
stage 'Script Checkout'
  node {
    git credentialsId: '102eded7-0eea-44de-b457-efb71884c99a', url: 'git@bitbucket.org:calmagchiu/network-conversion-programs.git'
  }

// Start the script sequence
stage 'pull_network.py'
  node {
    dir('pull_new_network_version') {
      //sh "python pull_network.py ${WORKSPACE}/output ${City}"
    }
  }

stage 'nn_angle.py'
  node {
    dir('pull_new_network_version') {
      //sh "python nn_angle.py ${WORKSPACE}/output"
    }
  }

stage 'readnetwork.java'
  node {
    dir('java_programs/readnetwork/readnetwork') {
      sh 'javac *.java'
      sh "java Main ${WORKSPACE}/output"
    }
  }

stage 'wkt.java'
  node {
    dir('java_programs/wkt/wkt') {
      sh 'javac *.java'
      sh "java ObjectMain ${WORKSPACE}/output"
    }
  }

stage 'build_zone_table.py'
  node {
    dir('pull_new_network_version') {
      sh "python build_zone_table.py ${WORKSPACE}/output ${City}"
    }
  }

stage 'create_tdtr.py'
  node {
    dir('pull_new_network_version') {
      sh "python create_tdtr.py ${WORKSPACE}/output ${City}"
    }
  }

stage 'new_turn_restrictions.py'
  node {
    dir('pull_new_network_version') {
      sh "python new_turn_restrictions.py ${WORKSPACE}/output ${City}"
    }
  }

stage 'topology.py'
  node {
    dir('topology') {
      sh "python topology.py ${WORKSPACE}/output ${City}"
    }
  }

stage 'mandel_preprocessing.py'
  node {
    dir('mandel_preprocessing') {
      sh "python preprocessing.py ${WORKSPACE}/output ${City}"
    }
  }

// Archive into Jenkins' storage, and into file structure
stage 'Archive results'
  node {
    archiveArtifacts 'output/network\\ -\\ link.csv'
    sh "mkdir ${WORKSPACE}/${City}/${BUILD_NUMBER}"
    sh "cp output/network\\ -\\ link.csv ${WORKSPACE}/${City}/${BUILD_NUMBER}"
  }
